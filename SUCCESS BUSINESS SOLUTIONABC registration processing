Purpose:
This is a sample web based online Complaint application form
Features:
1. Online submission of application
2. Storing the complaint data in SQLite database
'''

from flask import Flask, render_template, request
import sqlite3
import logging

#initialize logging
LOG_FILE_NAME = 'complaintAppLog.txt'
logging.basicConfig(level=logging.DEBUG,
                    format='%(asctime)s %(name)-12s %(levelname)-8s %(message)s',
                    datefmt='%m-%d %H:%M',
                    filename=LOG_FILE_NAME,
                    filemode='w')

#initialize database
def db_connect():
    # establsih the connection
    db_name = 'complaint_data.db'
    db_con = sqlite3.connect(db_name)
    logging.info('Connected to '+db_name)
    return db_con

# establsih the connection
conn = db_connect()

# REST API service
app = Flask(__name__)
@app.route('/',methods=['GET','POST'])
def home():
    home_page ='<html><h1>SUCCESS BUSINESS SOLUTION HOME PAGE</h1><body><a href="/Registration_application.html">Click here to submit a complaint </a><br><a href="/tracking.html">click here to Track the complaint</html>' 
    return home_page

@app.route('/complaint',methods=['GET','POST'])
def Registration_application():
    complaint_data = []
    complaint_status = ""
    if request.method == 'POST':
        try:
            logging.info("Capturing app data " + request.form['name'])
            complaint_data.append(request.form['name'])
            complaint_data.append(request.form['gender'])
            complaint_data.append(request.form['age'])
            complaint_data.append(request.form['email'])
            complaint_data.append(request.form['city'])
            complaint_data.append(request.form['pincode'])
            print(complaint_data)
            refno = write_complaint_data(complaint_data)
            
            complaint_status = 'Your registration_complaint with ID [ ' + str(refno) + ']'+' please remember the refid for tracking'
            print(complaint_status)
            logging.info(complaint_data)
        except:
            complaint_status = 'Error!'
            logging.exception(complaint_status)
    return render_template('Registration_application.html',complaint_status = complaint_status)

        

# function to write loan data to db
def write_complaint_data(complaint_data):

# establsih the connection
    conn = db_connect()

# create a cursor
    cur = conn.cursor()
# execute sql command
    sql = 'insert into registration_complaint(' \
          'name,' \
          'gender,' \
          'age, ' \
          'email, ' \
          'city, ' \
          'pincode,'/') values(?,?,?,?,?,?)'
# verifying the sql statement for debug
    print(sql)
    cur.execute(sql,[x for x in complaint_data])
    cur.execute("commit")
    refno = cur.lastrowid
    print(refno)
    cur.close()
    conn.close()
    logging.info("DB commit successful")
    return refno
if __name__ == '__main__':
   app.run()
